swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "1.0.0"
  title: TODO REST API
host: localhost:3001
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

################################################################################
#                                 Paths                                        #
################################################################################
paths:
  /signIn:
    x-swagger-router-controller: sign
    post:
      description: Validate the user credentials to access the UI console
      parameters:
        - name: user
          in: body
          description: User credentials
          schema:
            $ref: '#/definitions/User'
          required: true
      tags:
        - Sign
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: User Credentials Matched
  /signUp:
    x-swagger-router-controller: sign
    post:
      description: Register new user to provide access to UI Console
      parameters:
        - name: user
          in: body
          description: User credentials
          schema:
            $ref: '#/definitions/SignInUser'
          required: true
      tags:
        - Sign
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: User Registered
  /user/{userId}/task/{taskId}:
    x-swagger-router-controller: task
    get:
      description: Get the Task information for the Task Id for User userId
      parameters:
        - name: taskId
          in: path
          description: Task Id
          required: true
          type: "integer"
        - name: userId
          in: path
          description: User Id
          required: true
          type: "integer"
      tags:
        - Task
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Task Information
          schema:
            $ref: '#/definitions/Task'
    put:
      description: Update the task with taskId and userId
      parameters:
        - name: task
          in: body
          description: Task Update Body
          schema:
            $ref: '#/definitions/TaskUpdate'
        - name: taskId
          in: path
          description: Task Id
          required: true
          type: "integer"
        - name: userId
          in: path
          description: User Id
          required: true
          type: "integer"
      tags:
        - Task
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Task Information
          schema:
            $ref: '#/definitions/Task'
  /user/{userId}/tasks:
    x-swagger-router-controller: task
    get:
      description: Get All Tasks for User userId
      parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          type: "integer"
      tags:
        - Task
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: All Task Retrived
          schema:
            $ref: '#/definitions/Tasks'
  /user/{userId}/task:
    x-swagger-router-controller: task
    post:
      description: Create a new task for User userId
      parameters:
        - name: task
          in: body
          description: Task Details
          schema:
            $ref: '#/definitions/Task'
          required: true
        - name: userId
          in: path
          description: User Id
          required: true
          type: "integer"
      tags:
        - Task
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: New Task Created
          schema:
            $ref: '#/definitions/NewTask'
  /swagger:
      x-swagger-pipe: swagger_raw
  /task/{taskId}/comment:
      x-swagger-router-controller: comment
      post:
        description: Create a new comment
        parameters:
          - name: comment
            in: body
            description: Comment Body
            schema:
              $ref: '#/definitions/NewComment'
            required: true
          - name: taskId
            in: path
            description: Task Id
            required: true
            type: "integer"
        tags:
          - Comment
        responses:
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
          201:
            description: Comment Added
            schema:
              $ref: '#/definitions/Comment'
  /task/{taskId}/comment/{commentId}:
      x-swagger-router-controller: comment
      put:
        description: Edit comment
        parameters:
          - name: comment
            in: body
            description: Comment
            schema:
              $ref: '#/definitions/EditComment'
            required: true
          - name: taskId
            in: path
            description: Task Id
            required: true
            type: "integer"
          - name: commentId
            in: path
            description: Comment Id
            required: true
            type: "integer"
        tags:
          - Comment
        responses:
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
          200:
            description: Comment Updated
            schema:
              $ref: '#/definitions/Comment'
  /team:
      x-swagger-router-controller: Team
      post:
        description: Create a new Team
        parameters:
          - name: team
            in: body
            description: Team
            schema:
              $ref: '#/definitions/newTeam'
            required: true
        tags:
          - Team
        responses:
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
          201:
            description: Team Added
            schema:
              $ref: '#/definitions/Team'
  /team/{teamId}/user/{userId}:
      x-swagger-router-controller: Team
      delete:
        description: Remove User from Team
        parameters:
          - name: teamId
            in: path
            description: Team Id
            required: true
            type: "integer"
          - name: userId
            in: path
            description: User Id
            required: true
            type: "integer"
        tags:
          - Team
        responses:
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
          200:
            description: User Removed from team
  /team/{teamId}/user:
      x-swagger-router-controller: Team
      post:
        description: Add User to Team
        parameters:
          - name: teamId
            in: path
            description: Team Id
            required: true
            type: "integer"
          - name: user
            in: body
            description: User
            schema:
              $ref: '#/definitions/UserForTeam'
            required: true
        tags:
          - Team
        responses:
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
          200:
            description: User Added To team
      get:
        description: Get all the users of Team
        parameters:
          - name: teamId
            in: path
            description: Team Id
            required: true
            type: "integer"
        tags:
          - Team
        responses:
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
          200:
            description: All Users
            schema:
              $ref: '#/definitions/TeamUsers'



################################################################################
#                                   Models                                     #
################################################################################
definitions:
  Error:
      type: object
      properties:
        message:
          type: string
  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  SignInUser:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      name:
        type: string
  Task:
    type: object
    properties:
      name:
        type: string
      isCompleted:
        type: boolean
      date_added:
        type: string
        format: date-time
      due_date:
        type: string
        format: date-time
  NewTask:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      isCompleted:
        type: boolean
      date_added:
        type: string
        format: date-time
      due_date:
        type: string
        format: date-time
  Tasks:
    type: array
    items:
      $ref: '#/definitions/NewTask'
  TaskUpdate:
    type: object
    properties:
      name:
        type: string
      due_date:
        type: string
        format: date-time
      isCompleted:
        type: boolean
  NewComment:
    type: object
    properties:
      comment:
        type: string
      userId:
        type: integer
  EditComment:
    type: object
    properties:
      comment:
        type: string
  Comment:
    type: object
    properties:
      id:
        type: integer
      comment:
        type: string
      commentAt:
        type: string
        format: date-time
      userId:
        type: integer
  newTeam:
    type: object
    properties:
      name:
        type: string
      userId:
        type: integer
  Team:
    type: object
    properties:
      _id:
        type: integer
      name:
        type: string
      userId:
        type: integer
  TeamUser:
    type: object
    properties:
        id:
          type: integer
        name:
          type: string
  TeamUsers:
    type: array
    items:
      $ref: '#/definitions/TeamUser'
  UserForTeam:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
